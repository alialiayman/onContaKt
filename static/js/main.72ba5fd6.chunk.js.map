{"version":3,"sources":["feature/shared/components/AppHeader/AppHeader.tsx","feature/HajonsoftHeader/HajonsoftHeader.tsx","feature/Home/Home.tsx","feature/SignIn/SignIn.tsx","App.tsx","index.tsx","feature/HajonsoftHeader/logo-dark.png"],"names":["useStyles","makeStyles","theme","appBar","color","palette","common","white","height","zIndex","drawer","borderBottom","borderImageSlice","borderImageSource","primary","dark","light","toolBar","marginTop","drawerContainer","overflow","textAlign","content","flexGrow","padding","spacing","menuList","width","menuItem","fontSize","paddingLeft","menuItemSelected","borderLeft","main","buttonItem","submenuItem","grey","border","backgroundColor","submenuItemSelected","background","root","rootList","maxWidth","paper","nested","container","display","margin","HideOnScroll","props","scrolledUp","useScrollTrigger","children","Slide","direction","in","AppHeader","config","onSignIn","classes","history","useHistory","useState","drawerOpen","sidebar","selectedItem","selectedSubItem","anchorElement","buttons","state","setState","AppBar","position","elevation","className","Toolbar","variant","Grid","justify","alignItems","item","user","isLoggedIn","IconButton","edge","aria-label","onClick","p","src","logo","alt","style","maxHeight","map","b","Fragment","key","name","title","e","button","prev","newButtonsStates","buttonState","find","open","filter","currentTarget","push","handleButtonClick","icon","menuItems","Popper","some","anchorEl","btnState","btn","role","undefined","transition","disablePortal","marginLeft","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","newState","forEach","s","handleButtonMenuClose","Card","CardHeader","fontWeight","Divider","CardContent","List","component","mi","ListItem","parentButton","replace","toLowerCase","ListItemIcon","ListItemText","wrap","bookmarks","bm","Button","startIcon","size","fullWidth","textTransform","handleBookmarkClick","endIcon","Drawer","anchor","Typography","sideMenu","items","it","sidebarItemName","handleSidebarItemClick","selected","Collapse","unmountOnExit","disablePadding","sidebarSubItemName","DashboardOutlinedIcon","LabelOutlinedIcon","HotelOutlinedIcon","ImportExportOutlinedIcon","EmojiPeopleOutlinedIcon","NaturePeopleOutlinedIcon","PeopleIcon","SupervisedUserCircleIcon","AssistantOutlinedIcon","LoyaltyOutlinedIcon","AccountTreeOutlinedIcon","AccountCircleIcon","SettingsOutlinedIcon","ArrowForwardOutlinedIcon","HomeOutlinedIcon","ArtTrackOutlinedIcon","AttachMoneyOutlinedIcon","CloudDownloadOutlinedIcon","ContactPhoneOutlinedIcon","HajonsoftHeader","headerConfig","setHeaderConfig","setTimeout","Home","param","useParams","Paper","justifyContent","JSON","stringify","SignIn","defaultTheme","createMuiTheme","App","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.72ba5fd6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { AppBar, Toolbar, IconButton, Typography, Grid, Drawer, Theme, Collapse, List, ListItem, ListItemText, ListItemIcon, Popper, Grow, ClickAwayListener, Divider, Card, CardContent, CardHeader, useScrollTrigger, Slide, Button } from '@material-ui/core';\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { IHeaderConfig, IMenuItem, IButtonState } from '../interfaces'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    color: theme.palette.common.white,\n    height: '48px',\n    zIndex: theme.zIndex.drawer + 1,\n    borderBottom: '2px solid',\n    borderImageSlice: 1,\n    borderImageSource: 'linear-gradient(90deg, ' + theme.palette.primary.dark + ' 0%, ' + theme.palette.primary.light + ' 100%)',\n  },\n  toolBar: {\n    marginTop: '0',\n  },\n  drawerContainer: {\n    overflow: 'auto',\n    marginTop: '80px',\n    textAlign: 'left',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  menuList: {\n    width: '100%',\n  },\n  menuItem: {\n    fontSize: '0.875rem',\n    paddingLeft: '16px',\n  },\n  menuItemSelected: {\n    borderLeft: '2px solid ' + theme.palette.primary.main,\n    color: '#222222',\n  },\n  buttonItem: {\n    '&:hover': {\n      color: '#222222',\n    },\n  },\n  submenuItem: {\n    color: theme.palette.grey[700],\n    textAlign: 'left',\n    '&root': {\n      border: '1px solid silver',\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.grey[100],\n      color: '#222222',\n    },\n  },\n  submenuItemSelected: {\n    color: '#222222',\n    background: theme.palette.common.white,\n  },\n  root: {\n    height: 180,\n  },\n  rootList: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst AppHeader = ({ config, onSignIn }: { config: IHeaderConfig, onSignIn: any }) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [state, setState] = useState({ drawerOpen: false, sidebar: { selectedItem: '', selectedSubItem: '', anchorElement: null }, buttons: [] });\n\n  const handleButtonMenuClose = (e: any, b: any) => {\n    setState((p) => {\n      const newState = { ...p };\n      newState.buttons.forEach((s: IButtonState) => {\n        if (s.key === (b.name || b.title))\n          s.open = false;\n      });\n      return newState;\n    });\n  };\n\n\n  const handleButtonClick = (e: any, button: IMenuItem) => {\n    setState((prev: any) => {\n      let newButtonsStates: IButtonState[] = [...prev.buttons];\n      let buttonState: IButtonState = prev.buttons.find((b: { name: string }) => b.name === button.name)!;\n      if (!buttonState) {\n        buttonState = { key: button.name || button.title, open: true, anchorElement: e.currentTarget };\n      } else {\n        buttonState.open = !buttonState.open;\n        newButtonsStates = newButtonsStates.filter((b: { key: string }) => b.key !== (button.name || button.title));\n      }\n      newButtonsStates.push(buttonState);\n      return { ...prev, buttons: newButtonsStates };\n    });\n  };\n\n  const handleButtonItemClick = (e: any, button: IMenuItem, parentButton: IMenuItem) => {\n    history.push(button.name || button.title.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      const newState = { ...p };\n      newState.buttons.forEach((s: IButtonState) => {\n        if (s.key === (parentButton.name || parentButton.title))\n          s.open = false;\n      });\n      return newState;\n    });\n  };\n\n  const handleSidebarItemClick = (e: any, sidebarItemName: string) => {\n    history.push(sidebarItemName.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      if (p.sidebar.selectedItem === sidebarItemName) {\n        return { ...p, sidebar: { ...p.sidebar, selectedItem: '', anchorElement: e.currentTarget, selectedSubItem: '' } };\n      } else {\n        return { ...p, sidebar: { ...p.sidebar, selectedItem: sidebarItemName, anchorElement: e.currentTarget, selectedSubItem: '' } };\n      }\n    }\n    )\n  };\n\n  const handleSidebarSubItemClick = (e: any, sidebarSubItemName: string) => {\n    history.push(sidebarSubItemName.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      if (p.sidebar.selectedSubItem === sidebarSubItemName) {\n        return { ...p, sidebar: { ...p.sidebar, selectedSubItem: '' } };\n      } else {\n        return { ...p, sidebar: { ...p.sidebar, selectedSubItem: sidebarSubItemName } };\n\n      }\n    }\n    )\n  };\n\n\n  const handleBookmarkClick = (e: any, bm: IMenuItem) => {\n    ((bm.name || bm.title) && history.push((bm.name || bm.title).replace(/ /g, '-').toLowerCase()));\n  }\n  const handleSignInClick = (e: any, bm: IMenuItem) => {\n    ((bm.name || bm.title) && history.push((bm.name || bm.title).replace(/ /g, '-').toLowerCase()));\n    onSignIn();\n  }\n\n\n  return (\n    <HideOnScroll>\n      <div>\n        <AppBar position=\"fixed\" color=\"inherit\" elevation={config.elevation || 0} className={classes.appBar}>\n          <Toolbar className={classes.toolBar} variant=\"dense\">\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <Grid container justify=\"flex-start\" alignItems=\"center\" >\n                  {config.user && config.user.isLoggedIn && <IconButton edge=\"start\" aria-label=\"menu\" onClick={() => setState(p => ({ ...state, drawerOpen: !p.drawerOpen }))}>\n                    <MenuIcon />\n                  </IconButton>}\n                  <img src={config.logo} alt=\"logo\" style={{ maxHeight: '30px' }} />\n                </Grid>\n              </Grid>\n              {config.user && config.user.isLoggedIn &&\n                <Grid item>\n                  {config.buttons.map(b =>\n                    (\n                      <React.Fragment key={`topButton/${b.name || b.title}`}>\n                        <IconButton aria-label={`top button ${b.title}`} key={b.name} onClick={(e) => handleButtonClick(e, b)}>\n                          <b.icon />\n                        </IconButton>\n                        {b.menuItems &&\n                          <Popper key={`popper${b.name || b.title}`}\n                            open={state.buttons.some((p: IButtonState) => b.menuItems && p.key === (b.name || b.title) && p.open)}\n                            anchorEl={() => {\n                              const btnState: any = state.buttons.find((btn: IButtonState) => btn.key === b.name || b.title);\n                              if (btnState && btnState.anchorElement) {\n                                return btnState.anchorElement!;\n                              }\n                              return null;\n                            }}\n                            role={undefined}\n                            transition\n                            disablePortal\n                            style={{ width: b.width || '280px', marginLeft: '-200px' }}>\n                            {({ TransitionProps, placement }) => (\n                              <Grow\n                                {...TransitionProps}\n                                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                              >\n                                <ClickAwayListener onClickAway={(e) => handleButtonMenuClose(e, b)}>\n                                  <Card elevation={1} >\n                                    <CardHeader title={b.title} style={{ textAlign: 'left', fontWeight: 'bold', fontSize: '16px' }} >\n                                    </CardHeader>\n                                    <Divider />\n                                    <CardContent style={{ padding: '0px' }} >\n                                      <List component=\"nav\">\n                                        <React.Fragment>\n                                          {b.menuItems && b.menuItems.map(mi => (\n                                            <ListItem key={`topButton/menuItm/${b.name || b.title}${mi.name || mi.title}`}\n                                              button\n                                              className={classes.buttonItem}\n                                              onClick={(e) => handleButtonItemClick(e, mi, b)}\n                                            >\n                                              <ListItemIcon>\n                                                {mi.icon ?\n                                                  <mi.icon /> : <ArrowForwardOutlinedIcon color=\"secondary\" />}\n                                              </ListItemIcon>\n                                              <ListItemText primary={mi.title} />\n                                            </ListItem>\n                                          ))}\n                                        </React.Fragment>\n                                      </List>\n                                    </CardContent>\n\n                                  </Card>\n                                </ClickAwayListener>\n                              </Grow>\n                            )}\n                          </Popper>\n                        }\n                      </React.Fragment>\n\n                    )\n                  )}\n                </Grid>\n              }\n              {(!config.user || !config.user.isLoggedIn) &&\n                <Grid container style={{ width: '90%' }} justify=\"space-around\" alignItems=\"center\" wrap=\"nowrap\">\n\n                  {config.bookmarks && config.bookmarks.map(bm =>\n                    <React.Fragment>\n                      <Grid item style={{ width: '100%' }} >\n                        <Button\n                          startIcon={<bm.icon />}\n                          size=\"large\" fullWidth style={{ textTransform: 'none' }} onClick={(e) => handleBookmarkClick(e, bm)}>\n                          {bm.title}\n                        </Button>\n                      </Grid>\n\n                    </React.Fragment>\n                  )}\n                  <Grid container justify=\"flex-end\">\n                    <Button variant=\"contained\"\n                      color=\"primary\"\n                      endIcon={<LockIcon />}\n                      size=\"small\" onClick={(e) => handleSignInClick(e, { name: 'sign-in', title: 'Sign In' })}>Sign In</Button>>\n                    </Grid>\n                </Grid>\n              }\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        {config.user && config.user.isLoggedIn && <Drawer anchor=\"left\" open={state.drawerOpen} variant=\"persistent\" >\n          <div className={classes.drawerContainer} >\n            <Typography variant=\"h5\" style={{ marginLeft: '16px', fontSize: '1.125rem' }}>\n              {config.sideMenu.title}\n            </Typography>\n\n            <List\n              component=\"nav\"\n              className={classes.rootList}\n            >\n\n              {config.sideMenu.items && config.sideMenu.items.map(it => (\n                <React.Fragment key={`${it.name || it.title}`}>\n                  <ListItem\n                    button\n                    className={classes.menuItem + ' ' + (state.sidebar.selectedItem === (it.name || it.title) ? classes.menuItemSelected : '')}\n                    onClick={(e) => handleSidebarItemClick(e, it.name || it.title)}\n                    selected={state.sidebar.selectedItem === (it.name || it.title)}\n                  >\n                    {it.icon &&\n                      <ListItemIcon >\n                        <it.icon />\n                      </ListItemIcon>\n                    }\n                    <ListItemText primary={it.title} />\n\n                  </ListItem>\n                  <Collapse in={it.menuItems && state.sidebar.selectedItem === (it.name || it.title)} unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      {it.menuItems?.map(mi => (\n                        <ListItem key={mi.name || mi.title}\n                          button\n                          className={classes.nested + ' ' + classes.submenuItem + ' ' + (state.sidebar.selectedSubItem === (mi.name || mi.title) ? classes.submenuItemSelected : '')}\n                          selected={state.sidebar.selectedSubItem === (mi.name || mi.title)}\n                          onClick={(e) => handleSidebarSubItemClick(e, mi.name || mi.title)}\n                        >\n                          {mi.icon &&\n                            <ListItemIcon>\n                              <ListItemIcon>\n                                <mi.icon />\n                              </ListItemIcon>\n                            </ListItemIcon>}\n                          <ListItemText primary={mi.title} style={{ textAlign: 'left' }} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Collapse>\n                </React.Fragment>\n              ))}\n            </List>\n          </div>\n        </Drawer>\n        }\n      </div>\n    </HideOnScroll>\n  )\n}\nconst HideOnScroll = (props: any) => {\n  const scrolledUp = useScrollTrigger();\n  const { children } = props;\n\n  return (\n    <Slide direction=\"left\" in={!scrolledUp}>\n      {children}\n    </Slide>\n  );\n}\n\nexport default AppHeader;","import React, { useState } from 'react';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport AppHeader from '../shared/components/AppHeader/AppHeader';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport HotelOutlinedIcon from '@material-ui/icons/HotelOutlined';\nimport ImportExportOutlinedIcon from '@material-ui/icons/ImportExportOutlined';\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\nimport NaturePeopleOutlinedIcon from '@material-ui/icons/NaturePeopleOutlined';\nimport PeopleIcon from '@material-ui/icons/People';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport AssistantOutlinedIcon from '@material-ui/icons/AssistantOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ArtTrackOutlinedIcon from '@material-ui/icons/ArtTrackOutlined';\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\nimport { IHeaderConfig } from '../shared/components/interfaces';\n\nimport logo from './logo-dark.png';\n\n\nconst config: IHeaderConfig = {\n    logo,\n    elevation: 2,\n    user: {\n        isLoggedIn: false,\n    },\n    sideMenu: {\n        title: 'HajOnSoft',\n        items: [\n            {\n                 title: 'Dashboard', icon: DashboardOutlinedIcon,\n                menuItems: [\n                    {  title: 'Ticketing' , icon: LabelOutlinedIcon},\n                    {  title: 'Rooming' , icon: HotelOutlinedIcon},\n                    {  title: 'Other' , icon: ImportExportOutlinedIcon},\n                ]\n            },\n            {\n                title: 'Customers', icon: EmojiPeopleOutlinedIcon,\n                menuItems: [\n                    {  title: 'Prospects', icon: NaturePeopleOutlinedIcon },\n                    {  title: 'Confirmed' , icon: PeopleIcon},\n                    {  title: 'Archived' , icon: SupervisedUserCircleIcon},\n                ]\n            },\n            {  title: 'Sub Agents' , icon: AssistantOutlinedIcon},\n            {  title: 'Ticket Agents' , icon: LoyaltyOutlinedIcon},\n            {  title: 'Accounting', icon: AccountTreeOutlinedIcon }\n        ]\n    },\n    buttons: [\n        {\n           title: 'Ayman Ali', icon: AccountCircleIcon,\n            menuItems: [\n                { title: 'Manage Account', icon: SettingsOutlinedIcon },\n                { title: 'Sign out', icon: ArrowForwardOutlinedIcon },\n            ]\n        },\n    ],\n    bookmarks: [\n        {title: 'Home', icon: HomeOutlinedIcon },\n        {title: 'Features', icon: ArtTrackOutlinedIcon },\n        {title: 'Pricing', icon: AttachMoneyOutlinedIcon },\n        {title: 'Download', icon: CloudDownloadOutlinedIcon },\n        {title: 'Contact', icon: ContactPhoneOutlinedIcon },\n\n    ],\n}\n\nconst HajonsoftHeader: React.FC = () => {\n\n    const [headerConfig, setHeaderConfig] = useState(config);\n    const handleOnSignIn = ()=> {\n        setHeaderConfig(prev=> ({...prev,user: {isLoggedIn: true}}));\n        setTimeout(() => {\n        setHeaderConfig(prev=> ({...prev,user: {isLoggedIn: false}}));\n            \n        }, 2000);\n    }\n\n    return (\n        <AppHeader config={headerConfig} onSignIn={handleOnSignIn} />\n    )\n}\n\nexport default HajonsoftHeader;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Grid, Paper } from '@material-ui/core';\n\n\nconst Home: React.FC = () => {\n    let param = useParams();\n    return (\n        <React.Fragment>\n            <Paper elevation={10} style={{ margin: '80px auto', height: '150vh', width: '90%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Typography component=\"p\" color=\"primary\" variant=\"h2\" >Welcome</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography component=\"p\" variant=\"h3\" color=\"textSecondary\" >\n                            {JSON.stringify(param)}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </React.Fragment>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport { Typography, Grid, Paper } from '@material-ui/core';\n\n\nconst SignIn: React.FC = () => {\n    return (\n        <React.Fragment>\n            <Paper elevation={10} style={{ margin: '80px auto', height: '150vh', width: '90%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Typography component=\"p\" color=\"primary\" variant=\"h2\" >Welcome</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography component=\"p\" variant=\"h3\" color=\"textSecondary\" >\n                            Sign in Page here\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </React.Fragment>\n    )\n};\n\nexport default SignIn;","import React from 'react';\nimport './App.css';\nimport HajonsoftHeader from './feature/HajonsoftHeader/HajonsoftHeader';\n// import OptumHeader from './feature/OptumHeader/OptumHeader';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './feature/Home/Home';\nimport {  ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport SignIn from './feature/SignIn/SignIn';\n\nconst defaultTheme = createMuiTheme();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={defaultTheme}>\n        <Router>\n          <HajonsoftHeader />\n            <Route exact path=\"/sign-in\">\n              <SignIn />\n            </Route>\n            <Route exact path=\"/:id\">\n              <Home />\n            </Route>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo-dark.30f6b11a.png\";"],"sourceRoot":""}