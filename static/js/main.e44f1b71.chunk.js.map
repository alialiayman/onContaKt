{"version":3,"sources":["features/HajonsoftHeader/logo-dark.png","features/shared/RecordsManager/redux/firebaseService.ts","features/SignIn/redux/useUserState.ts","features/SignIn/redux/actions.ts","features/Customers/customerModel.ts","features/Customers/ImportCustomers.tsx","features/shared/RecordsManager/components/CoreImage.js","features/shared/RecordsManager/components/CoreField.js","features/shared/RecordsManager/components/CoreForm.js","features/shared/RecordsManager/components/CoreList.js","features/shared/RecordsManager/redux/useRecordManagerState.ts","features/shared/RecordsManager/redux/actions.ts","features/shared/RecordsManager/RecordsManager.js","features/Customers/chatModel.ts","features/Customers/ProspectCustomers.tsx","features/shared/components/AppHeader/AppHeader.tsx","features/HajonsoftHeader/RelateHeader.tsx","features/shared/components/BusinessContent/components/Features.tsx","features/shared/components/BusinessContent/components/Pricing.tsx","features/shared/components/BusinessContent/components/Demo.tsx","features/shared/components/BusinessContent/components/Downloads.tsx","features/shared/components/BusinessContent/components/Contact.tsx","features/shared/components/BusinessContent/BusinessContent.tsx","features/Home/homeModel.ts","features/Home/Home.js","features/SignIn/PrivateRoute.tsx","features/SignIn/PublicRoute.tsx","features/SignIn/SignIn.tsx","features/shared/RecordsManager/redux/recordsManagerReducer.ts","features/SignIn/redux/reducer.ts","redux/reducer.ts","features/SignIn/redux/signinService.ts","features/SignIn/redux/saga.ts","features/shared/RecordsManager/redux/saga.ts","redux/saga.ts","App.tsx","index.tsx"],"names":["module","exports","firebaseService","getExternalResponse","url","a","axios","get","importedRecords","createRecord","fbUser","projectId","folder","record","post","localId","idToken","fbCustomer","updateRecord","recordId","put","id","deleteRecord","delete","deleteTable","getRecord","getRecords","result","useUserState","dispatch","useDispatch","login","firebaseInfo","type","payload","Login","webapiKey","useSelector","state","auth","request","user","response","data","isLoggedIn","isError","isInProgress","customerModel","name","actions","fields","label","summary","pathFilter","ImportCustomers","useState","createError","setCreateError","importSuccess","svc","handleImport","isShallowImport","forEach","r","setTimeout","transformed","original","newImport","importedKeys","Object","keys","ik","normalizedKey","replace","toLowerCase","matchingKey","_","find","f","Date","toISOString","substring","address","city","companystate","zipcode","nationality","trim","imported","Fragment","TextField","value","fullWidth","multiline","rows","variant","Button","color","onClick","Snackbar","open","autoHideDuration","Alert","severity","CoreImage","initialUrl","onUrlChanged","CoreField","field","mode","onChange","onBlur","includes","Grid","item","xs","autoFocus","disabled","isReadOnly","autoComplete","component","rowsMax","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","newUrl","JSON","stringify","useStyles","makeStyles","theme","formContainer","width","margin","cardTitle","textAlign","fontSize","backgroundColor","actionsContainer","display","justifyContent","alignItems","padding","actionsContainerTopMain","actionsContainerTopButtons","CoreForm","model","initialInputRecord","onAdded","onUpdated","onDeleted","onCancelled","classes","title","initialValues","onSubmit","values","setSubmitting","newRecord","firebaseId","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Card","raised","className","CardHeader","subheader","action","CardContent","container","spacing","map","key","CardActions","justify","startIcon","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","MoreDetails","Chat","Back","CoreList","records","onAdd","onDelete","onUpdate","onModelChange","summaryColumns","filter","sortedSummaryColumns","orderBy","components","Toolbar","some","rowdata","source","icons","pluralName","columns","icon","tooltip","isFreeAction","event","rowData","detailPanel","render","options","actionsColumnIndex","grouping","pageSize","exportButton","localization","body","emptyDataSourceMessage","useRecordManagerState","load","Load","folderState","recordsManager","x","withRouterRecordsManager","withRouter","initialMode","onRecordAdded","onRecordDeleted","onRecordUpated","match","selectedRecord","setState","processed","toUpperCase","pluralize","sqlFields","split","sf","fieldParts","existingDefinitionRecord","push","defaultValue","readonly","s","touchModel","emptyRecord","output","element","establishEmptyRecord","useEffect","length","deletedRecord","remainingRecords","updatedRecord","updatedRecords","c","prev","index","chatModel","moment","format","setModel","dummy","style","customerChatmodel","appBar","palette","common","white","height","zIndex","drawer","borderBottom","borderImageSlice","borderImageSource","primary","dark","light","toolBar","marginTop","drawerContainer","overflow","content","flexGrow","menuList","menuItem","paddingLeft","menuItemSelected","borderLeft","main","buttonItem","submenuItem","grey","border","submenuItemSelected","background","root","rootList","maxWidth","paper","nested","HideOnScroll","scrolledUp","useScrollTrigger","children","Slide","direction","in","AppHeader","config","history","useHistory","drawerOpen","sidebar","selectedItem","selectedSubItem","anchorElement","buttons","AppBar","position","elevation","IconButton","edge","aria-label","p","src","logo","alt","maxHeight","b","e","button","newButtonsStates","buttonState","currentTarget","handleButtonClick","menuItems","Popper","anchorEl","btnState","btn","role","undefined","transition","disablePortal","marginLeft","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","newState","handleButtonMenuClose","fontWeight","Divider","List","mi","ListItem","parentButton","ListItemIcon","ListItemText","wrap","bookmarks","bm","smooth","to","route","endIcon","size","Drawer","anchor","Typography","sideMenu","items","it","sidebarItemName","handleSidebarItemClick","selected","Collapse","unmountOnExit","disablePadding","sidebarSubItemName","DashboardOutlinedIcon","LabelOutlinedIcon","HotelOutlinedIcon","ImportExportOutlinedIcon","EmojiPeopleOutlinedIcon","NaturePeopleOutlinedIcon","PeopleIcon","FavoriteBorderOutlinedIcon","SupervisedUserCircleIcon","MergeTypeOutlinedIcon","AssistantOutlinedIcon","LoyaltyOutlinedIcon","AccountTreeOutlinedIcon","AccountCircleIcon","SettingsOutlinedIcon","ArrowForwardOutlinedIcon","HomeOutlinedIcon","ArtTrackOutlinedIcon","AttachMoneyOutlinedIcon","CloudDownloadOutlinedIcon","ContactPhoneOutlinedIcon","RelatetHeader","subtitle","img","Features","timeout","Zoom","i","Paper","borderRadius","marginBottom","Pricing","Demo","Downloads","Contact","BusinessContent","homeModel","sections","imageSrc","Home","m","PrivateRoute","Component","rest","PublicRoute","restricted","SignIn","localStorage","getItem","showKeys","setShowKeys","email","password","setItem","k","Checkbox","Link","href","paddingTop","paddingRight","CircularProgress","thickness","message","initialState","recordsManagerReducer","dontChange_l","change_l","dontChange_s","change_s","objectKeys","mappedRecords","dontChange_e","change_e","isLoggedin","loginReducer","rootReducer","combineReducers","authService","returnSecureToken","fbuser","register","loginSagaFlow","loginSaga","takeLatest","call","recordsmanagerSagaFlow","recordsManagerSaga","sagas","fork","defaultTheme","createMuiTheme","sagaMiddleware","createSagaMiddleware","reduxDevtoolsCompose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","trace","compose","store","createStore","applyMiddleware","run","App","ThemeProvider","exact","path","ProspectCustomers","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e44f1b71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-dark.30f6b11a.png\";","import axios from 'axios';\n// import firebase from 'firebase/app'\n// import 'firebase/storage';\n\n\n\n// firebase.initializeApp(firebaseConfig);\n\n// var storage = firebase.storage();\n\nconst firebaseService = () => {\n    return {\n        getExternalResponse: async (url: string) => {\n            const importedRecords = await axios.get(url);\n            return importedRecords;\n        },\n        createRecord: async (fbUser: any, projectId: string, folder: string, record: any) => {\n            const fbCustomer = await axios.post(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}.json?auth=${fbUser.idToken}`, record);\n            return fbCustomer;\n        },\n        updateRecord: async (fbUser: any, projectId: string, folder: string, recordId: string, record: any) => {\n            await axios.put(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}/${recordId}.json?auth=${fbUser.idToken}`, record);\n            return { ...record, id: recordId };\n        },\n        deleteRecord: async (fbUser: any, projectId: string, folder: string, recordId: string) => {\n            await axios.delete(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}/${recordId}.json?auth=${fbUser.idToken}`);\n            return { id: recordId };\n        },\n        deleteTable: async (fbUser: any, projectId: string, folder: string) => {\n            await axios.delete(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}.json?auth=${fbUser.idToken}`);\n        },\n        getRecord: async (fbUser: any, projectId: string, folder: string, recordId: string,) => {\n            const fbCustomer = await axios.get(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}/${recordId}.json?auth=${fbUser.idToken}`);\n            return fbCustomer;\n        },\n        getRecords: async (fbUser: any, projectId: string, folder: string) => {\n            const result = await axios.get(`https://${projectId}.firebaseio.com/${fbUser.localId}/${folder}.json?auth=${fbUser.idToken}`);\n            return result;\n        },\n        // getImageUrl: async (fileName) => {\n        //     const url = await storage.ref('images').child(fileName).getDownloadURL();\n        //     return url;\n        // }\n    }\n}\n\n\n// export { storage, firebaseService as default };\nexport { firebaseService as default };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Login } from './actions';\n\nconst useUserState = (): any => {\n    const dispatch = useDispatch();\n\n    const loginToFirebase = (firebaseInfo: any) => {\n        dispatch(Login(firebaseInfo));\n    };\n\n    return {\n        login: loginToFirebase,\n        webapiKey: useSelector((state: any) => state.auth && state.auth.request && state.auth.request.webapiKey),\n        projectId: useSelector((state: any) => state.auth && state.auth.request && state.auth.request.projectId),\n        user: useSelector((state: any) => state.auth && state.auth.response && state.auth.response.data),\n        isLoggedIn: useSelector((state: any) => state.auth && state.auth.isLoggedIn),\n        isError: useSelector((state: any) => state.auth && state.auth.isError),\n        isInProgress: useSelector((state: any) => state.auth && state.auth.isInProgress),\n    }\n}\n\nexport default useUserState;","export const Login = (firebaseInfo: any) => {\n    return {\n        type: 'LOGIN',\n        payload: firebaseInfo\n    }\n}\n\n","const customerModel: any = {\n  name: 'customer',\n  folder: 'customer',\n  actions: [\n    'chat'\n  ],\n  fields: [\n    { name: 'name', label: 'Name', summary: 1 },\n    { name: 'contactperson', label: 'Contact person', summary: 2 },\n    { name: 'email', type: 'email', summary: 2 },\n    { name: 'createdt', type: 'date' },\n    { name: 'expiredate', label: 'Expires', type: 'date' },\n    { name: 'confirmed', label: 'Confirmed', type: 'checkbox', pathFilter: 'confirmed' },\n    { name: 'archived', label: 'Archived', type: 'checkbox', pathFilter: 'archived'  },\n    { name: 'favorite', label: 'Favorite', type: 'checkbox', pathFilter: 'favorite'  },\n    { name: 'logourl' },\n    { name: 'tel' },\n    { name: 'address' },\n    { name: 'website' },\n    { name: 'companyid' },\n    { name: 'comments', type: 'textarea' },\n  ]\n}\n\n\nexport default customerModel;","import { Button, TextField } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport firebaseService from '../shared/RecordsManager/redux/firebaseService';\nimport useUserState from '../SignIn/redux/useUserState';\nimport customerModel from './customerModel';\n\nconst customerTransform = (transformed: any, original: any) => {\n\n    transformed.address = `${original.address}, ${original.city}  ${original.companystate} ${original.zipcode} ${original.nationality}`.trim();\n    transformed.imported = new Date();\n    return transformed;\n}\nconst ImportCustomers = () => {\n    const {  projectId, user } = useUserState();\n    const [createError, setCreateError] = useState(false);\n    const [importSuccess] = useState(false);\n\n    // const handleImport = async () => {\n    //     const rows = importText.split('\\n');\n    //     for (let i = 0; i < rows.length; i++) {\n    //         let regex = /(\\w*?)\\s(\\w*)/g;\n    //         let [, name, type] = regex.exec(rows[i]) || [];\n    //         if (name) {\n    //             let newRecord = { initialInputRecord };\n    //             newRecord.name = name.substring(0, 1).toLowerCase() + name.substring(1);\n    //             newRecord.label = name;\n    //             newRecord.type = convertToFirebaseType(type);\n    //             svc.createRecord(user, projectId, model.name, newRecord);\n    //         }\n    //     }\n    //     SetState({ ...state, importDMLOpen: false });\n    //     // onAdded({ ...newRecord});\n    // }\n\n\n    // function convertToFirebaseType(typ) {\n    //     const _typ = typ.toLowerCase();\n    //     if (_typ.includes('int')) return 'number';\n    //     if (_typ.includes('bit')) return 'checkbox';\n\n    //     return 'text'\n\n    // }\n    const svc = firebaseService();\n\n    const handleImport = async (isShallowImport: boolean) => {\n        try {\n            const importUrl = 'http://localhost:3000/api/HajCompanies?filter=%7B%22where%22%3A%20%7B%22parentcompanyid%22%3A%20null%7D%7D'\n            const response = await svc.getExternalResponse(importUrl);\n\n            if (response && response.data) {\n                const importRecords = response.data;\n\n                importRecords.forEach((r: any) => {\n                    setTimeout(() => {\n                        let newImport: any = {};\n                        const importedKeys = Object.keys(r);\n                        if (isShallowImport) {\n                            importedKeys.forEach(ik => {\n                                const normalizedKey = ik.replace('_', '').toLowerCase();\n                                //Find this normalizedKey in the definition\n                                const matchingKey = _.find(customerModel.fields, (f: any) => f.name.toLowerCase() === normalizedKey);\n                                if (matchingKey && matchingKey.name) {\n                                    if (matchingKey.type === 'date') {\n                                        newImport[matchingKey.name] = (new Date(r[ik]).toISOString().substring(0, 10));\n                                    } else {\n                                        newImport[matchingKey.name] = r[ik];\n                                    }\n                                }\n                            })\n                        } else {\n                            newImport = r;\n                        }\n                        newImport = customerTransform(newImport, r);\n                        svc.createRecord(user, projectId, customerModel.name, newImport);\n                    }, 2000)\n                });\n            }\n\n        } catch (err) {\n            setCreateError(true);\n\n        }\n    };\n\n\n    return (\n        <React.Fragment>\n            <TextField label=\"url\" value=\"http://localhost:3000/api/HajCompanies?filter=%7B%22where%22%3A%20%7B%22parentcompanyid%22%3A%20null%7D%7D\"></TextField>\n            <TextField label=\"describe table output\" fullWidth multiline rows=\"10\" variant='outlined'>\n\n            </TextField>\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => handleImport(false)}>\n                Import all fields\n                    </Button>\n            <Button color=\"primary\" variant=\"contained\" onClick={() => handleImport(true)}>\n                Import model only\n            </Button>\n\n            <Snackbar open={createError} autoHideDuration={6000} >\n                <Alert severity=\"error\">\n                    Error importing customers\n                </Alert>\n            </Snackbar>\n\n            <Snackbar open={importSuccess} autoHideDuration={6000} >\n                <Alert severity=\"success\">\n                    Importing customers ...\n                </Alert>\n            </Snackbar>\n        </React.Fragment>\n    )\n}\n\nexport default ImportCustomers;","\n\n\n// const useStyles = makeStyles({\n//     mainContainer: {\n//         borderRadius: '8px',\n//         position: 'relative',\n//         width: '210px',\n//         height: '210px',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         padding: '10px'\n//     },\n//     imgContainer: {\n//         width: '200px',\n//         height: '200px',\n//     },\n//     pickImage: {\n//         position: 'absolute',\n//         top: '50%',\n//         left: '50%',\n//         transform: 'translate(-50%, -50%)',\n//         color: 'blue',\n//         fontSize: '0.8em',\n//     },\n//     progress: {\n//         position: 'absolute',\n//         top: '50%',\n//         left: '50%',\n//         transform: 'translate(-50%, -50%)',\n//     }\n// });\n\nconst CoreImage = (initialUrl, onUrlChanged) => {\n    // const [fbUrl, setFBUrl] = useState(initialUrl);\n    // const [progress, setProgress] = useState('');\n    // const [isMouseOver, setIsMouseOver] = useState(false);\n    // const classes = useStyles();\n\n    // const handleFileOnChange = (event) => {\n    //     // if (event.target.files[0]) {\n    //     //     const selectedFile = event.target.files[0];\n    //     //     setFBUrl('');\n    //     //     const uploadTask = storage.ref(`images/${selectedFile.name}`).put(selectedFile);\n    //     //     uploadTask.on('state_changed',\n    //     //         (snapshot) => {\n    //     //             const percentage = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100) + '%';\n    //     //             setProgress(percentage);\n    //     //             if (percentage === '100%') {\n    //     //                 setTimeout(() => {\n    //     //                     setProgress('')\n    //     //                 }, 2000);\n    //     //             }\n    //     //         },\n    //     //         (error) => {\n    //     //             console.log('error');\n    //     //             console.log(error);\n    //     //         },\n    //     //         () => {\n    //     //             storage.ref('images').child(selectedFile.name).getDownloadURL().then(url => {\n    //     //                 setFBUrl(url);\n    //     //                 // onUrlChanged(url);\n    //     //             })\n    //     //         }\n    //     //     )\n    //     // }\n    // }\n    // let _fileInput;\n    // return (\n    //     <React.Fragment>\n    //         <Card className={classes.mainContainer} onMouseOver={() => setIsMouseOver(true)} onMouseLeave={() => setIsMouseOver(false)} >\n    //             <CardContent>\n    //                 <img src={fbUrl} alt={fbUrl || 'image'} className={classes.imgContainer} style={{ display: fbUrl ? 'block' : 'none' }}></img>\n    //                 <Link href=\"#\" className={classes.pickImage} style={{ display: isMouseOver ? 'block' : 'none' }} onClick={() => _fileInput.click()}>Change Image</Link>\n    //                 <div className={classes.progress} style={{ display: progress ? 'block' : 'none' }}>{progress}</div>\n\n    //             </CardContent>\n    //         </Card>\n    //         <input\n    //             type=\"file\"\n    //             onChange={handleFileOnChange}\n    //             style={{ display: 'none' }}\n    //             ref={fileInput => _fileInput = fileInput}\n    //         />\n    //     </React.Fragment>\n    // )\n}\n\nexport default CoreImage;","import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport { ErrorMessage } from 'formik';\nimport React from 'react';\nimport CoreImage from './CoreImage';\n\nconst CoreField = ({ field, mode, onChange, onBlur, value }) => {\n\n    const handleUrlChanged = (newUrl) => {\n\n    }\n\n    return (\n        <React.Fragment>\n            {((['text', 'tel', 'email'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        autoComplete=\"off\"\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n            {((['textarea'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        fullWidth\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        multiline\n                        rowsMax={4}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['number'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['date'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <TextField\n                        type={field.type}\n                        name={field.name}\n                        label={field.label}\n                        autoFocus={field.autoFocus}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['checkbox'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={value}\n                                onChange={onChange}\n                                name={field.name}\n                                color=\"primary\"\n                                disabled={mode === 2 || (field.isReadOnly)}\n                            />\n                        }\n                        label={field.label}\n                    />\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n\n            {((['file'].includes(field.type)) &&\n                <Grid item xs={4}>\n                    <CoreImage\n                        name={field.name}\n                        disabled={mode === 2 || (field.isReadOnly)}\n                        initialUrl={value}\n                        onUrlChanged={handleUrlChanged}\n                    />\n                    <div>{value} {JSON.stringify(value)}</div>\n                    <ErrorMessage name={field.name} component=\"div\" />\n                </Grid>)}\n        </React.Fragment>\n\n    )\n}\n\nexport default CoreField;","import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport useUserState from '../../../SignIn/redux/useUserState';\nimport firebaseService from '../redux/firebaseService';\nimport CoreField from './CoreField';\n\nconst useStyles = makeStyles((theme) => ({\n    formContainer: {\n        width: '90%',\n        margin: '25px auto',\n    },\n    cardTitle: {\n        textAlign: 'left',\n        fontSize: '2em',\n        backgroundColor: 'silver',\n    },\n    actionsContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '10px',\n        backgroundColor: 'silver',\n    },\n    actionsContainerTopMain: {\n        width: '50%',\n        padding: '10px',\n    },\n    actionsContainerTopButtons: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    }\n}));\n\nconst CoreForm = ({ mode, model, initialInputRecord, onAdded, onUpdated, onDeleted, onCancelled }) => {\n\n    const classes = useStyles();\n    const svc = firebaseService();\n    const title = (mode) => {\n        switch (mode) {\n            case 1:\n                return 'Create ' + model.name;\n            case 2:\n                return 'Delete ' + model.name;\n            case 3:\n                return 'Update ' + model.name;\n            default:\n                break;\n        }\n    }\n    const { projectId, user } = useUserState();\n\n\n    // const handleImageChange = ()=> {\n    //     // TODO: when image changes store it to the database using the record key and its field name\n    // }\n\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={initialInputRecord}\n                onSubmit={async (values, { setSubmitting }) => {\n                    const newRecord = {};\n                    model.fields.forEach(f => newRecord[f.name] = values[f.name]);\n                    if (mode === 1) {\n                        const result = await svc.createRecord(user, projectId, model.folder, newRecord);\n                        onAdded({ ...values, firebaseId: result.data.name });\n                    } else if (mode === 2) {\n                        await svc.deleteRecord(user, projectId, model.folder, initialInputRecord.firebaseId);\n                        onDeleted(values);\n                    } else if (mode === 3) {\n                        await svc.updateRecord(user, projectId, model.folder, initialInputRecord.firebaseId, newRecord);\n                        onUpdated(values);\n                    }\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <form onSubmit={handleSubmit} >\n                            <Card raised className={classes.formContainer}>\n                                <CardHeader className={classes.cardTitle}\n                                    title={title(mode)}\n                                    subheader={`${values.firebaseId}` || ''}\n                                    action={\n                                        <CancelOutlinedIcon color='secondary' onClick={onCancelled} />\n                                    }\n                                />\n                                <CardContent>\n                                    <Grid container spacing={3}>\n                                        {model.fields.map(f => <CoreField key={f.name} field={f} value={values[f.name]} mode={mode} onChange={handleChange} onBlur={handleBlur} />)}\n                                    </Grid>\n\n                                </CardContent>\n                                <CardActions >\n                                    <Grid container spacing={2} justify=\"flex-end\">\n                                        <Grid item>\n                                            <Button type=\"button\" disabled={isSubmitting} variant=\"contained\" color='secondary' onClick={onCancelled} startIcon={<CancelOutlinedIcon />}>Cancel</Button>\n                                        </Grid>\n                                        <Grid item>\n                                            {(mode === 1) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<AddOutlinedIcon />}>Create</Button>}\n\n\n                                            {(mode === 2) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='secondary' startIcon={<DeleteOutlinedIcon />}>Delete</Button>}\n\n\n                                            {(mode === 3) && <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color='primary' startIcon={<SaveOutlinedIcon />}>Save</Button>}\n                                        </Grid>\n                                    </Grid>\n\n                                </CardActions>\n                            </Card>\n                        </form>\n                    )}\n\n            </Formik>\n        </React.Fragment>\n    )\n}\n\n\nexport default CoreForm;","import AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport DetailsIcon from '@material-ui/icons/Details';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport PermPhoneMsgOutlinedIcon from '@material-ui/icons/PermPhoneMsgOutlined';\nimport Remove from '@material-ui/icons/Remove';\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport { Button } from '@material-ui/core';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport _ from 'lodash';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport React, { forwardRef } from 'react';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  MoreDetails: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />),\n  Chat: forwardRef((props, ref) => <PermPhoneMsgOutlinedIcon {...props} ref={ref} />),\n  Back: forwardRef((props, ref) => <ReplayOutlinedIcon {...props} ref={ref} />),\n\n};\n\n\nconst CoreList = ({ model, records, onAdd, onDelete, onUpdate, onModelChange }) => {\n  const summaryColumns = _.filter(model.fields, (f) => !!f.summary);\n  const sortedSummaryColumns = _.orderBy(summaryColumns, ['summary', ['asc']]).map(r => { return { title: r.label, field: r.name } });\n\n  return (\n    <React.Fragment>\n      <MaterialTable\n        components={{\n          Toolbar: props => (\n            <div >\n              {model.actions && model.actions.some(a => a === \"back\") &&\n                <Button color=\"secondary\" variant=\"outlined\" onClick={() => onModelChange({ rowdata: '', source: 'back' })} startIcon={<ReplayOutlinedIcon></ReplayOutlinedIcon>}>Back</Button>\n              }\n\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n        icons={tableIcons}\n        title={model.pluralName}\n        columns={sortedSummaryColumns}\n        data={records}\n        actions={[\n          {\n            icon: tableIcons.Add,\n            tooltip: 'Add ' + model.name,\n            isFreeAction: true,\n            onClick: (event) => onAdd()\n          },\n          {\n            icon: () => <tableIcons.Edit color=\"action\" />,\n            tooltip: 'Edit ' + model.name,\n            onClick: (event, rowData) => {\n              onUpdate(rowData);\n            }\n          },\n          {\n            icon: () => (model.actions.includes('chat') && <tableIcons.Chat color=\"action\" />),\n            tooltip: 'chat ' + model.name,\n            onClick: (event, rowData) => {\n              onModelChange(rowData);\n            }\n          },\n          {\n            icon: () => <tableIcons.Delete color=\"error\" />,\n            tooltip: 'Delete ' + model.name,\n            onClick: (event, rowData) => {\n              onDelete(rowData);\n            }\n          }\n        ]}\n        detailPanel={[\n          {\n            tooltip: 'chat',\n            render: rowData => {\n              return (\n                <div>\n                  {JSON.stringify(rowData)}\n                </div>\n              )\n            },\n          }\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n          grouping: false,\n          pageSize: 10,\n          exportButton: true,\n        }}\n        localization={{\n          body: {\n            emptyDataSourceMessage: `No ${model.name}s to display, import or add ${model.name}s by clicking the plus sign above.`,\n          },\n        }}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CoreList;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Load } from './actions';\n\nconst useRecordManagerState = (model: any) => {\n    const dispatch = useDispatch();\n\n    const loadData = () => {\n        dispatch(Load(model));\n    };\n    const data: any = useSelector((state: any) => {\n        const folderState = state.recordsManager.find((x: any) => x.folder === model.folder);\n        if (folderState) {\n            return folderState.response;\n        } else {\n            return [];\n        }\n    });\n    const isError: any = useSelector((state: any) => {\n        const folderState = state.recordsManager.find((x: any) => x.folder === model.folder);\n        if (folderState) {\n            return folderState.isError;\n        } else {\n            return false;\n        }\n    });\n\n    const isInProgress: any = useSelector((state: any) => {\n        const folderState = state.recordsManager.find((x: any) => x.folder === model.folder);\n        if (folderState) {\n            return folderState.isInProgress;\n        } else {\n            return false;\n        }\n    });\n    return {\n        load: loadData,\n        data,\n        isError,\n        isInProgress,\n    }\n}\n\nexport default useRecordManagerState;","export const Load = (model: any) => {\n    return {\n        type: 'LOADDATA',\n        payload: model\n    }\n}\n\n","import _ from 'lodash';\nimport pluralize from 'pluralize';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router\";\nimport useUserState from '../../SignIn/redux/useUserState';\nimport CoreForm from './components/CoreForm';\nimport CoreList from './components/CoreList';\nimport useRecordManagerState from './redux/useRecordManagerState';\n\n\nconst RecordsManager = ({ model, initialMode, onModelChange, onRecordAdded, onRecordDeleted, onRecordUpated, match }) => {\n    const [state, setState] = useState({\n        records: [],\n        selectedRecord: {},\n        mode: initialMode,\n    });\n    model = touchModel(model);\n    const { projectId, user } = useUserState();\n    const { load, data } = useRecordManagerState(model);\n    const emptyRecord = establishEmptyRecord(model);\n\n    useEffect(() => {\n        if (!data || data.length === 0) {\n            model.projectId = projectId;\n            model.user = user;\n            load(model);\n        }\n\n    }, [model]);\n\n    if (!model) {\n        return null;\n    }\n    const handleOnAdded = (newRecord) => {\n        setState({ ...state, mode: 0, records: [...state.records, newRecord] });\n        onRecordAdded(newRecord);\n    };\n\n    const handleOnUpdate = (updateRecord) => {\n        setState({ ...state, mode: 3, selectedRecord: updateRecord });\n    };\n    const handleOnUpdated = (updatedRecord) => {\n        const updatedRecords = state.records.map(c => c.firebaseId === updatedRecord.firebaseId ? updatedRecord : c);\n        setState({ ...state, mode: 0, records: updatedRecords });\n        onRecordUpated(updatedRecord);\n    };\n    const handleOnDeleted = (deletedRecord) => {\n        const remainingRecords = state.records.filter(x => x.firebaseId !== deletedRecord.firebaseId);\n        setState({ ...state, mode: 0, records: remainingRecords });\n        onRecordDeleted(deletedRecord);\n    };\n    const handleOnCancelled = () => {\n        setState({ ...state, mode: 0 });\n    };\n    const handleOnAdd = () => {\n        setState({ ...state, mode: 1, selectedRecord: emptyRecord });\n    };\n    const handleOnDelete = (deleteRecord) => {\n        setState({ ...state, mode: 2, selectedRecord: deleteRecord });\n    };\n    const handleOnDetails = (rowdata) => {\n        setState(prev => ({ ...prev, records: [], selectedRecord: {} }));\n        onModelChange({ rowdata, source: 'actions', index: 0 });\n    }\n\n\n    return (\n        <React.Fragment>\n            {\n                state.mode ?\n                    <CoreForm\n                        mode={state.mode}\n                        model={model}\n                        initialInputRecord={state.selectedRecord}\n                        onAdded={handleOnAdded}\n                        onDeleted={handleOnDeleted}\n                        onUpdated={handleOnUpdated}\n                        onCancelled={handleOnCancelled}\n                    /> :\n                    <CoreList\n                        model={model}\n                        records={data}\n                        onAdd={handleOnAdd}\n                        onDelete={handleOnDelete}\n                        onUpdate={handleOnUpdate}\n                        onModelChange={handleOnDetails}\n                    />\n            }\n        </React.Fragment >\n    )\n}\n\nfunction establishEmptyRecord(model) {\n    const output = {};\n    if (model && model.fields) {\n        model.fields.forEach(element => {\n            output[element.name] = element.defaultValue;\n        });\n    }\n    return output;\n}\n\nfunction touchModel(model) {\n    if (!model || !model.name || !model.fields || !model.folder) return null;\n    if (model.processed) return model;\n    model.name = model.name[0].toUpperCase() + model.name.toLowerCase().substring(1);\n    model.pluralName = pluralize(model.name);\n    if (model.sqlFields) {\n        if (!model.fields) model.fields = [];\n        const fields = model.sqlFields.split('\\n');\n        fields.forEach(sf => {\n            const fieldParts = sf.replace(/ /g, '').split('\\t');\n            const name = fieldParts[0][0].toLowerCase() + fieldParts[0].substring(1);\n            const label = fieldParts[0];\n            let type = '';\n            if (fieldParts[1].includes('char')) {\n                type = 'text';\n            } else if (fieldParts[1].includes('bit')) {\n                type = 'checkbox';\n            } else if (fieldParts[1].includes('datetime')) {\n                type = 'date';\n            } else if (fieldParts[1].includes('int')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('money')) {\n                type = 'number';\n            } else if (fieldParts[1].includes('decimal')) {\n                type = 'number';\n            }\n\n            const existingDefinitionRecord = _.find(model.fields, (f) => f.name === fieldParts[0]);\n            if (existingDefinitionRecord) {\n                existingDefinitionRecord.label = label;\n                existingDefinitionRecord.type = type;\n                existingDefinitionRecord.name = name;\n            } else {\n                model.fields.push({\n                    name,\n                    label,\n                    type\n                })\n            }\n\n        });\n    }\n\n    // reassure all fields have type, label, summary, default value and readonly flag\n    model.fields = model.fields.map(f => {\n        const label = (f.label || (f.name[0].toUpperCase() + f.name.substring(1)));\n        const type = (f.type || 'text');\n        const summary = f.summary || 0;\n        const defaultValue = f.defaultValue || '';\n        const readonly = f.readonly || false;\n        return {\n            ...f,\n            label,\n            type,\n            summary,\n            readonly,\n            defaultValue,\n        };\n    });\n\n    // reassure least one summary column\n    if (!model.fields.some(s => s.summary)) {\n        model.fields[0].summary = 1;\n    }\n    // reassure least one autofocus column\n    if (!model.fields.some(s => s.autoFocus)) {\n        model.fields[0].autoFocus = true;\n    }\n\n    model.processed = true;\n    return model;\n}\n\nconst withRouterRecordsManager = withRouter(RecordsManager);\n\nexport { touchModel, withRouterRecordsManager as default };\n","import moment from 'moment';\n\nconst chatModel: any = ({ name, folder }: any) => ({\n  name,\n  actions: [\n    'back'\n  ],\n  folder,\n  fields: [\n    { name: 'when', label: 'Date and Time', summary: 1, defaultValue: moment().format('dddd DD MMM YYYY hh:mm a'), readonly: true },\n    { name: 'purpose', label: 'Purpose', summary: 2, autoFocus: true },\n    { name: 'detail', label: 'Details', type: 'textarea', summary: 3},\n  ]\n})\n\nexport default chatModel;","import React, { useState } from 'react';\nimport RecordsManager from '../shared/RecordsManager/RecordsManager';\nimport chatModel from './chatModel';\nimport customerModel from './customerModel';\nimport { withRouter } from 'react-router-dom';\n\n\nconst ProspectCustomers = () => {\n\n    const [model, setModel] = useState(customerModel);\n\n    const dummy = () => { }\n\n    const handleModelChange = ({ rowdata, source, index }: any) => {\n        if (model.name === 'Customer' && source === 'actions' && index === 0) {\n            const customerChatmodel = chatModel({ name: `Chat ${customerModel.name} ${rowdata.name}`, folder: `chat${rowdata.firebaseId}` });\n            setModel(customerChatmodel);\n        } else if (source === 'back') {\n            setModel(customerModel);\n        }\n\n    }\n\n    return (\n        <div style={{ padding: '1rem' }}>\n            <RecordsManager initialMode={0} model={model} onModelChange={handleModelChange} onRecordAdded={dummy} onRecordDeleted={dummy} onRecordUpated={dummy} />\n        </div>\n\n    )\n}\n\nexport default withRouter(ProspectCustomers);","import { AppBar, Button, Card, CardContent, CardHeader, ClickAwayListener, Collapse, Divider, Drawer, Grid, Grow, IconButton, List, ListItem, ListItemIcon, ListItemText, Popper, Slide, Theme, Toolbar, Typography, useScrollTrigger } from '@material-ui/core';\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport LockIcon from '@material-ui/icons/Lock';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport useUserState from '../../../SignIn/redux/useUserState';\nimport { IButtonState, IHeaderConfig, IMenuItem } from '../interfaces';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    color: theme.palette.common.white,\n    height: '48px',\n    zIndex: theme.zIndex.drawer + 1,\n    borderBottom: '2px solid',\n    borderImageSlice: 1,\n    borderImageSource: 'linear-gradient(90deg, ' + theme.palette.primary.dark + ' 0%, ' + theme.palette.primary.light + ' 100%)',\n  },\n  toolBar: {\n    marginTop: '0',\n  },\n  drawerContainer: {\n    overflow: 'auto',\n    marginTop: '80px',\n    textAlign: 'left',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  menuList: {\n    width: '100%',\n  },\n  menuItem: {\n    fontSize: '0.875rem',\n    paddingLeft: '16px',\n  },\n  menuItemSelected: {\n    borderLeft: '2px solid ' + theme.palette.primary.main,\n    color: '#222222',\n  },\n  buttonItem: {\n    '&:hover': {\n      color: '#222222',\n    },\n  },\n  submenuItem: {\n    color: theme.palette.grey[700],\n    textAlign: 'left',\n    '&root': {\n      border: '1px solid silver',\n    },\n    '&:hover': {\n      backgroundColor: theme.palette.grey[100],\n      color: '#222222',\n    },\n  },\n  submenuItemSelected: {\n    color: '#222222',\n    background: theme.palette.common.white,\n  },\n  root: {\n    height: 180,\n  },\n  rootList: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  container: {\n    display: 'flex',\n  },\n  paper: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst AppHeader = ({ config }: { config: IHeaderConfig }) => {\n  const classes = useStyles();\n  const { isLoggedIn } = useUserState();\n\n  let history = useHistory();\n  const [state, setState] = useState({ drawerOpen: false, sidebar: { selectedItem: '', selectedSubItem: '', anchorElement: null }, buttons: [] });\n\n  const handleButtonMenuClose = (e: any, b: any) => {\n    setState((p) => {\n      const newState = { ...p };\n      newState.buttons.forEach((s: IButtonState) => {\n        if (s.key === (b.name || b.title))\n          s.open = false;\n      });\n      return newState;\n    });\n  };\n\n\n  const handleButtonClick = (e: any, button: IMenuItem) => {\n    setState((prev: any) => {\n      let newButtonsStates: IButtonState[] = [...prev.buttons];\n      let buttonState: IButtonState = prev.buttons.find((b: { name: string }) => b.name === button.name)!;\n      if (!buttonState) {\n        buttonState = { key: button.name || button.title, open: true, anchorElement: e.currentTarget };\n      } else {\n        buttonState.open = !buttonState.open;\n        newButtonsStates = newButtonsStates.filter((b: { key: string }) => b.key !== (button.name || button.title));\n      }\n      newButtonsStates.push(buttonState);\n      return { ...prev, buttons: newButtonsStates };\n    });\n  };\n\n  const handleButtonItemClick = (e: any, button: IMenuItem, parentButton: IMenuItem) => {\n    history.push(button.name || button.title.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      const newState = { ...p };\n      newState.buttons.forEach((s: IButtonState) => {\n        if (s.key === (parentButton.name || parentButton.title))\n          s.open = false;\n      });\n      return newState;\n    });\n  };\n\n  const handleSidebarItemClick = (e: any, sidebarItemName: string) => {\n    history.push(sidebarItemName.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      if (p.sidebar.selectedItem === sidebarItemName) {\n        return { ...p, sidebar: { ...p.sidebar, selectedItem: '', anchorElement: e.currentTarget, selectedSubItem: '' } };\n      } else {\n        return { ...p, sidebar: { ...p.sidebar, selectedItem: sidebarItemName, anchorElement: e.currentTarget, selectedSubItem: '' } };\n      }\n    }\n    )\n  };\n\n  const handleSidebarSubItemClick = (e: any, sidebarSubItemName: string) => {\n    history.push(sidebarSubItemName.replace(/ /g, '-').toLowerCase());\n    setState((p) => {\n      if (p.sidebar.selectedSubItem === sidebarSubItemName) {\n        return { ...p, sidebar: { ...p.sidebar, selectedSubItem: '' }, drawerOpen: false };\n      } else {\n        return { ...p, sidebar: { ...p.sidebar, selectedSubItem: sidebarSubItemName }, drawerOpen: false };\n\n      }\n    }\n    )\n  };\n\n\n  // const handleBookmarkClick = (e: any, bm: IMenuItem) => {\n  //   ((bm.name || bm.title) && history.push((bm.route || bm.name || bm.title).replace(/ /g, '-').toLowerCase()));\n  // }\n  \n  const handleSignInClick = (e: any, bm: IMenuItem) => {\n    ((bm.name || bm.title) && history.push((bm.name || bm.title).replace(/ /g, '-').toLowerCase()));\n  }\n\n\n  return (\n    <HideOnScroll>\n      <div>\n        <AppBar position=\"fixed\" color=\"inherit\" elevation={config.elevation || 0} className={classes.appBar}>\n          <Toolbar className={classes.toolBar} variant=\"dense\">\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <Grid container justify=\"flex-start\" alignItems=\"center\" >\n                  {isLoggedIn && <IconButton edge=\"start\" aria-label=\"menu\" onClick={() => setState(p => ({ ...state, drawerOpen: !p.drawerOpen }))}>\n                    <MenuIcon />\n                  </IconButton>}\n                  <img src={config.logo} alt=\"logo\" style={{ maxHeight: '30px' }} />\n                </Grid>\n              </Grid>\n              {isLoggedIn &&\n                <Grid item>\n                  {config.buttons.map(b =>\n                    (\n                      <React.Fragment key={`topButton/${b.name || b.title}`}>\n                        <IconButton aria-label={`top button ${b.title}`} key={b.name} onClick={(e) => handleButtonClick(e, b)}>\n                          <b.icon />\n                        </IconButton>\n                        {b.menuItems &&\n                          <Popper key={`popper${b.name || b.title}`}\n                            open={state.buttons.some((p: IButtonState) => b.menuItems && p.key === (b.name || b.title) && p.open)}\n                            anchorEl={() => {\n                              const btnState: any = state.buttons.find((btn: IButtonState) => btn.key === b.name || b.title);\n                              if (btnState && btnState.anchorElement) {\n                                return btnState.anchorElement!;\n                              }\n                              return null;\n                            }}\n                            role={undefined}\n                            transition\n                            disablePortal\n                            style={{ width: b.width || '280px', marginLeft: '-200px' }}>\n                            {({ TransitionProps, placement }) => (\n                              <Grow\n                                {...TransitionProps}\n                                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                              >\n                                <ClickAwayListener onClickAway={(e) => handleButtonMenuClose(e, b)}>\n                                  <Card elevation={1} >\n                                    <CardHeader title={b.title} style={{ textAlign: 'left', fontWeight: 'bold', fontSize: '16px' }} >\n                                    </CardHeader>\n                                    <Divider />\n                                    <CardContent style={{ padding: '0px' }} >\n                                      <List component=\"nav\">\n                                        <React.Fragment>\n                                          {b.menuItems && b.menuItems.map(mi => (\n                                            <ListItem key={`topButton/menuItm/${b.name || b.title}${mi.name || mi.title}`}\n                                              button\n                                              className={classes.buttonItem}\n                                              onClick={(e) => handleButtonItemClick(e, mi, b)}\n                                            >\n                                              <ListItemIcon>\n                                                {mi.icon ?\n                                                  <mi.icon /> : <ArrowForwardOutlinedIcon color=\"secondary\" />}\n                                              </ListItemIcon>\n                                              <ListItemText primary={mi.title} />\n                                            </ListItem>\n                                          ))}\n                                        </React.Fragment>\n                                      </List>\n                                    </CardContent>\n\n                                  </Card>\n                                </ClickAwayListener>\n                              </Grow>\n                            )}\n                          </Popper>\n                        }\n                      </React.Fragment>\n\n                    )\n                  )}\n                </Grid>\n              }\n              {!isLoggedIn &&\n                <Grid container style={{ width: '90%' }} justify=\"space-around\" alignItems=\"center\" wrap=\"nowrap\">\n\n                  {config.bookmarks && config.bookmarks.map(bm =>\n                    <React.Fragment>\n                      <Grid item style={{ width: '100%' }} >\n                        <Link smooth to={bm.route || ''}><bm.icon /> {bm.title}</Link>\n                      </Grid>\n                    </React.Fragment>\n                  )}\n                  <Grid container justify=\"flex-end\">\n                    <Button variant=\"contained\"\n                      color=\"primary\"\n                      endIcon={<LockIcon />}\n                      size=\"small\" onClick={(e) => handleSignInClick(e, { name: 'sign-in', title: 'Sign In' })}>Sign In</Button>\n                    </Grid>\n                </Grid>\n              }\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        {isLoggedIn &&\n          <Drawer anchor=\"left\" open={state.drawerOpen} variant=\"persistent\" >\n            <div className={classes.drawerContainer} >\n              <Typography variant=\"h5\" style={{ marginLeft: '16px', fontSize: '1.125rem' }}>\n                {config.sideMenu.title}\n              </Typography>\n\n              <List\n                component=\"nav\"\n                className={classes.rootList}\n              >\n\n                {config.sideMenu.items && config.sideMenu.items.map(it => (\n                  <React.Fragment key={`${it.name || it.title}`}>\n                    <ListItem\n                      button\n                      className={classes.menuItem + ' ' + (state.sidebar.selectedItem === (it.name || it.title) ? classes.menuItemSelected : '')}\n                      onClick={(e) => handleSidebarItemClick(e, it.name || it.title)}\n                      selected={state.sidebar.selectedItem === (it.name || it.title)}\n                    >\n                      {it.icon &&\n                        <ListItemIcon >\n                          <it.icon />\n                        </ListItemIcon>\n                      }\n                      <ListItemText primary={it.title} />\n\n                    </ListItem>\n                    <Collapse in={it.menuItems && state.sidebar.selectedItem === (it.name || it.title)} unmountOnExit>\n                      <List component=\"div\" disablePadding>\n                        {it.menuItems?.map(mi => (\n                          <ListItem key={mi.name || mi.title}\n                            button\n                            className={classes.nested + ' ' + classes.submenuItem + ' ' + (state.sidebar.selectedSubItem === (mi.name || mi.title) ? classes.submenuItemSelected : '')}\n                            selected={state.sidebar.selectedSubItem === (mi.name || mi.title)}\n                            onClick={(e) => handleSidebarSubItemClick(e, mi.name || mi.title)}\n                          >\n                            {mi.icon &&\n                              <ListItemIcon>\n                                <ListItemIcon>\n                                  <mi.icon />\n                                </ListItemIcon>\n                              </ListItemIcon>}\n                            <ListItemText primary={mi.title} style={{ textAlign: 'left' }} />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </Collapse>\n                  </React.Fragment>\n                ))}\n              </List>\n            </div>\n          </Drawer>\n        }\n      </div>\n    </HideOnScroll>\n  )\n}\nconst HideOnScroll = (props: any) => {\n  const scrolledUp = useScrollTrigger();\n  const { children } = props;\n\n  return (\n    <Slide direction=\"left\" in={!scrolledUp}>\n      {children}\n    </Slide>\n  );\n}\n\nexport default AppHeader;","import AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport ArtTrackOutlinedIcon from '@material-ui/icons/ArtTrackOutlined';\nimport AssistantOutlinedIcon from '@material-ui/icons/AssistantOutlined';\nimport AttachMoneyOutlinedIcon from '@material-ui/icons/AttachMoneyOutlined';\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport HotelOutlinedIcon from '@material-ui/icons/HotelOutlined';\nimport ImportExportOutlinedIcon from '@material-ui/icons/ImportExportOutlined';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport LoyaltyOutlinedIcon from '@material-ui/icons/LoyaltyOutlined';\nimport MergeTypeOutlinedIcon from '@material-ui/icons/MergeTypeOutlined';\nimport NaturePeopleOutlinedIcon from '@material-ui/icons/NaturePeopleOutlined';\nimport PeopleIcon from '@material-ui/icons/People';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport React from 'react';\nimport AppHeader from '../shared/components/AppHeader/AppHeader';\nimport { IHeaderConfig } from '../shared/components/interfaces';\nimport logo from './logo-dark.png';\n\n\n\nconst config: IHeaderConfig = {\n    logo,\n    elevation: 2,\n    sideMenu: {\n        title: 'Relate',\n        items: [\n            {\n                title: 'Dashboard', icon: DashboardOutlinedIcon,\n                menuItems: [\n                    { title: 'Ticketing', icon: LabelOutlinedIcon },\n                    { title: 'Rooming', icon: HotelOutlinedIcon },\n                    { title: 'Other', icon: ImportExportOutlinedIcon },\n                ]\n            },\n            {\n                title: 'Customers', icon: EmojiPeopleOutlinedIcon,\n                menuItems: [\n                    { title: 'Prospects', icon: NaturePeopleOutlinedIcon },\n                    { title: 'Confirmed', icon: PeopleIcon },\n                    { title: 'Favorite', icon: FavoriteBorderOutlinedIcon },\n                    { title: 'Archived', icon: SupervisedUserCircleIcon },\n                    { title: 'Import', icon: MergeTypeOutlinedIcon },\n                ]\n            },\n            { title: 'Sub Agents', icon: AssistantOutlinedIcon },\n            { title: 'Ticket Agents', icon: LoyaltyOutlinedIcon },\n            { title: 'Accounting', icon: AccountTreeOutlinedIcon }\n        ]\n    },\n    buttons: [\n        {\n            title: 'Ayman Ali', icon: AccountCircleIcon,\n            menuItems: [\n                { title: 'Manage Account', icon: SettingsOutlinedIcon },\n                { title: 'Sign out', icon: ArrowForwardOutlinedIcon },\n            ]\n        },\n    ],\n    bookmarks: [\n        { route: '/', title: 'Home', icon: HomeOutlinedIcon },\n        { route: '/#features', title: 'Features', icon: ArtTrackOutlinedIcon },\n        { route: '/#pricing', title: 'Pricing', icon: AttachMoneyOutlinedIcon },\n        { route: '/#download', title: 'Download', icon: CloudDownloadOutlinedIcon },\n        { route: '/#contact', title: 'Contact', icon: ContactPhoneOutlinedIcon },\n    ],\n}\n\nconst RelatetHeader: React.FC = () => {\n\n    return (\n        <AppHeader config={config} />\n    )\n}\n\nexport default RelatetHeader;","import { Grid, Paper, Slide, Typography, Zoom } from '@material-ui/core';\nimport React from 'react';\n\nconst config = {\n    title: 'Manage your HAJJ & Umrah business',\n    subtitle: 'HajOnSoft is a management software which will allow you to ...',\n    items: [\n        { img: '/images/passport-reader.png', title: 'Use passport readers', content: 'to read machine and visual passport information including the personal photo. We support 3M, AccessIS, ARH and Superma readers.' },\n        { img: '/images/ministry-of-hajj.png', title: 'Apply for visa', content: 'Photo resizes automatically and you Keep a local copy of your customers.' },\n        { img: 'https://images.unsplash.com/photo-1524850011238-e3d235c7d4c9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60', title: 'Assign Rooms', content: 'based on requests, Age, Nationality and mahram information. Send to customers and hotels.' },\n        { img: '/images/ministry-of-hajj.png', title: 'Print IDs', content: 'bracelets, luggage tags, room labels, Hajj/Umrah applications, flight reports and passport stickers' },\n    ]\n}\n\n\nconst Features = ({ model }: any) => {\n    return (\n        <React.Fragment >\n            <div style={{ width: '100%' }}>\n                <Slide direction=\"right\" in={true} timeout={500}>\n                    <Typography variant=\"h3\">{config.title}</Typography>\n                </Slide>\n                <Zoom in={true} timeout={1000}>\n\n                    <Typography variant=\"h4\" >{config.subtitle}</Typography>\n                </Zoom>\n                <Grid container justify=\"space-between\" spacing={1} style={{ padding: '20px' }}>\n                    {config.items.map(i =>\n                        <Grid item xs={3} >\n                            <Slide direction=\"left\" in={true} timeout={500}>\n                                <Paper elevation={5} style={{ height: '300px', margin: '0 auto', padding: '20px' }}>\n                                    <img src={i.img} alt={i.title} style={{ width: '128px', height: '128px', borderRadius: '50%', marginBottom: '20px' }}></img>\n                                    <Typography variant=\"h6\">{i.title}</Typography>\n                                    <Typography>{i.content}</Typography>\n                                </Paper>\n                            </Slide>\n                        </Grid>\n                    )}\n                </Grid>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Features\n","import React from 'react'\n\nconst Pricing = ({model}: any)=> {\n    return (\n        <div>\n            Welcome to pricing\n        </div>\n    )\n}\n\nexport default Pricing;","import React from 'react'\n\n\nconst Demo = ({ model }: any) => {\n\n    return (\n    <pre>welcome {JSON.stringify(model,null,2)}</pre>\n    )\n}\n\nexport default Demo;","import React from 'react'\n\n\nconst Downloads = ({ model }: any) => {\n\n    return (\n    <pre>welcome {JSON.stringify(model,null,2)}</pre>\n    )\n}\n\nexport default Downloads;","import React from 'react'\n\n\nconst Contact = ({ model }: any) => {\n\n    return (\n    <pre>welcome {JSON.stringify(model,null,2)}</pre>\n    )\n}\n\nexport default Contact;","import React from 'react'\nimport Features from './components/Features';\nimport Pricing from './components/Pricing';\nimport Demo from './components/Demo';\nimport Downloads from './components/Downloads';\nimport Contact from './components/Contact';\n\n\nconst BusinessContent = ({model}: any)=> {\n\n    return (\n        <React.Fragment>\n            <section id={model.key}></section>\n            {model.key === 'features' && <Features model={model}/> }\n            {model.key === 'pricing' && <Pricing model={model}/>}\n            {model.key === 'demo' && <Demo model={model}/>}\n            {model.key === 'downloads' && <Downloads model={model}/>}\n            {model.key === 'contact' && <Contact model={model}/>}\n        </React.Fragment>\n    )\n}\n\nexport default BusinessContent;","const homeModel : BusinessContent= \n    {\n        key: 'hajonsoft',\n        title: 'welcome to hajonsoft 2020 with nly few days left to almwaled al nawawi on ',\n        subtitle: 'previous event was israa wi mirag - scroll events',\n        sections: [\n            {\n                key: 'features',\n                title: 'are you ready for it',\n                subtitle: 'it will save you money',\n                sections: [\n                    {\n                        key: 'feature1',\n                        imageSrc: 'kaaba',\n                        title: 'scan passports',\n                        subtitle: 'scan good',\n                        body: 'some bla bla bla'\n\n                    }\n                ]\n            },\n            {\n                key: 'features',\n                title: 'are you ready for it',\n                subtitle: 'it will save you money',\n                sections: [\n                    {\n                        key: 'feature1',\n                        imageSrc: 'kaaba',\n                        title: 'scan passports',\n                        subtitle: 'scan good',\n                        body: 'some bla bla bla'\n\n                    }\n                ]\n            }\n        ]\n\n    }\n\n\nexport default homeModel;\n\ninterface BusinessContent {\n    key: string;\n    title?: string;\n    subtitle?: string;\n    imageSrc?: string;\n    body?: string;\n    footer?: string;\n    sections?: BusinessContent[]\n}","import React from 'react';\nimport BusinessContent from '../shared/components/BusinessContent/BusinessContent';\n//const Slide = require('./Slide').default;\nimport homeModel from './homeModel';\n\n\n\nconst Home = () => {\n\n    return (\n        <React.Fragment >\n            {/* <div style={{ margin: '50px auto', width: '100%', backgroundImage: '/images/bg-art.jpg' }}>\n                <AutoRotatingCarousel\n                    label=\"Register Now\"\n                    open={true}\n                    autoplay={false}\n                    onStart={() => alert('hi')}\n                    style={{ backgroundImage: '/images/bg-art.jpg' }}\n                >\n                    <Slide\n                        media={\n                            <img src=\"http://www.icons101.com/icon_png/size_256/id_79394/youtube.png\" />\n                        }\n                        mediaBackgroundStyle={{ backgroundImage: '/images/bg-art.jpg' }}\n                        style={{ backgroundImage: '/images/bg-art.jpg' }}\n                        title=\"One\"\n                        subtitle=\"Just using this will blow your mind.\"\n                    />\n                    <Slide\n                        media={\n                            <img src=\"http://www.icons101.com/icon_png/size_256/id_80975/GoogleInbox.png\" />\n                        }\n                        mediaBackgroundStyle={{ backgroundColor: 'skyBlue' }}\n                        style={{ backgroundColor: 'navy' }}\n                        title=\"Two\"\n                        subtitle=\"Well just mix two colors and your are good to go!\"\n                    />\n                    <Slide\n                        media={\n                            <img src=\"http://www.icons101.com/icon_png/size_256/id_76704/Google_Settings.png\" />\n                        }\n                        mediaBackgroundStyle={{ backgroundColor: 'olive' }}\n                        style={{ backgroundColor: 'green' }}\n                        title=\"Three\"\n                        subtitle=\"The Force is a metaphysical and ubiquitous power in the Star Wars fictional universe.\"\n                    />\n                </AutoRotatingCarousel>\n            </div> */}\n            {/* <pre>{JSON.stringify(homeModel.sections,null,2)}</pre> */}\n            {homeModel.sections && homeModel.sections.map(m => <BusinessContent model={m} />)}\n\n        </React.Fragment >\n    )\n};\n\nexport default Home ","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport useUserState from './redux/useUserState';\n\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\n    const { isLoggedIn } = useUserState();\n\n    return (\n\n        <Route {...rest} render={props => (\n            isLoggedIn ?\n                <Component {...props} />\n                : <Redirect to=\"/sign-in\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport useUserState from './redux/useUserState';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}: any) => {\n    const {isLoggedIn} = useUserState();\n\n    return (\n        <Route {...rest} render={props => (\n            isLoggedIn && restricted ?\n                <Redirect to=\"/dashboard\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import { Button, Checkbox, FormControlLabel, Grid, Link, Paper, Switch, TextField, Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HttpsOutlinedIcon from '@material-ui/icons/HttpsOutlined';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport useUserState from './redux/useUserState';\nimport { CircularProgress } from '@material-ui/core';\n\nconst SignIn: React.FC = () => {\n    const { login, isError, isInProgress } = useUserState();\n    const webapiKey = localStorage.getItem('webapiKey');\n    const projectId = localStorage.getItem('projectId');\n    const [showKeys, setShowKeys] = useState(!(webapiKey && projectId));\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={1} style={{ margin: '50px auto', height: '90vh', width: '100%' }}>\n                <Grid item xs={6} style={{ display: ' flex', alignItems: 'center', justifyContent: 'center' }} >\n                    <img src=\"https://cdn.pixabay.com/photo/2020/02/17/18/12/office-4857268_960_720.jpg\" alt=\"sign in slogan\" width=\"100%\" height=\"auto\" />\n                </Grid>\n                <Grid item xs={6} style={{ display: ' flex', alignItems: 'center', justifyContent: 'center' }}>\n                    <Formik\n                        initialValues={{ webapiKey, projectId, email: 'ayali@hotmail.com', password: 'paris123' }}\n                        onSubmit={(values, actions) => {\n                            if (values.webapiKey) {\n                                localStorage.setItem('webapiKey', values.webapiKey);\n                            }\n                            if (values.projectId) {\n                                localStorage.setItem('projectId', values.projectId);\n                            }\n                            login(values);\n                        }}>\n                        {({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) =>\n                            <Paper elevation={3} style={{ backgroundColor: 'hsl(240,100%,99%)', color: 'hsl(240,100%,20%)', width: '80%' }}>\n                                <Form >\n                                    <Typography variant=\"h4\" style={{ marginTop: '20px' }}>Login</Typography>\n                                    <Typography variant=\"subtitle1\">Please login to your firebase database</Typography>\n                                    <div>\n                                        <Grid container direction=\"column\" spacing={2} style={{ padding: '1rem' }}>\n\n                                            <Grid item>\n\n                                                <Field name=\"email\">\n                                                    {({ field }: any) => (\n                                                        <React.Fragment>\n                                                            <TextField\n                                                                fullWidth\n                                                                type=\"text\"\n                                                                label=\"Email\"\n                                                                {...field}\n                                                                autoComplete=\"off\"\n                                                            />\n                                                            <ErrorMessage name=\"email\" component=\"div\" />\n                                                        </React.Fragment>\n                                                    )}\n                                                </Field>\n                                            </Grid>\n                                            <Grid item>\n\n                                                <Field name=\"password\">\n                                                    {({ field }: any) => (\n                                                        <React.Fragment>\n                                                            <TextField\n                                                                fullWidth\n                                                                type=\"password\"\n                                                                label=\"password\"\n                                                                {...field}\n                                                                autoComplete=\"off\"\n                                                            />\n                                                            <ErrorMessage name=\"password\" component=\"div\" />\n                                                        </React.Fragment>\n                                                    )}\n                                                </Field>\n                                            </Grid>\n\n\n                                            <Grid container alignItems=\"center\" >\n                                                <Grid item xs={8}>\n                                                    {showKeys &&\n                                                        <React.Fragment>\n                                                            <Grid item xs={12}>\n                                                                <Field name=\"webapiKey\">\n                                                                    {({ field }: any) => (\n                                                                        <React.Fragment>\n                                                                            <TextField\n                                                                                fullWidth\n                                                                                type=\"text\"\n                                                                                label=\"Firebase webApi Key\"\n                                                                                autoFocus={true}\n                                                                                {...field}\n                                                                                autoComplete=\"off\"\n                                                                            />\n                                                                            <ErrorMessage name=\"webapiKey\" component=\"div\" />\n                                                                        </React.Fragment>\n                                                                    )}\n                                                                </Field>\n                                                            </Grid>\n                                                            <Grid item xs={12}>\n                                                                <Field name=\"projectId\">\n                                                                    {({ field }: any) => (\n                                                                        <React.Fragment>\n                                                                            <TextField\n                                                                                fullWidth\n                                                                                type=\"text\"\n                                                                                label=\"Firebase projectId\"\n                                                                                {...field}\n                                                                                autoComplete=\"off\"\n                                                                            />\n                                                                            <ErrorMessage name=\"projectId\" component=\"div\" />\n                                                                        </React.Fragment>\n                                                                    )}\n                                                                </Field>\n                                                            </Grid>\n                                                        </React.Fragment>\n                                                    }\n                                                </Grid>\n                                                <Grid item xs={4}>\n                                                    <FormControlLabel\n                                                        control={<Switch checked={showKeys} onChange={() => setShowKeys(k => !k)} />}\n                                                        label=\"Firebase keys\"\n                                                    />\n                                                </Grid>\n                                            </Grid>\n\n\n\n                                            <Grid item>\n\n                                                <Grid container justify=\"space-between\" >\n                                                    <Grid item>\n\n                                                        <FormControlLabel\n                                                            control={<Checkbox />} label=\"Remember me\" />\n                                                    </Grid>\n                                                    <Grid item>\n\n                                                    </Grid>\n                                                    <Link href=\"#\" color=\"secondary\" style={{ paddingTop: '10px' }}>Forgot password?</Link>\n\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n\n                                    <div style={{ display: 'flex', justifyContent: 'flex-end', paddingRight: '20px', marginBottom: '2rem' }}>\n                                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" startIcon={isInProgress ? <CircularProgress color=\"inherit\" size={15} thickness={8} /> : <HttpsOutlinedIcon />}>Login</Button>\n                                    </div>\n                                </Form>\n                            </Paper>\n                        }\n                    </Formik>\n                </Grid>\n            </Grid>\n\n            <Snackbar open={isError} autoHideDuration={6000} message=\"Firebase: login failed, please check and try again!\" />\n\n        </React.Fragment >\n    )\n};\n\nexport default SignIn;","\nconst initialState: any = [];\nfunction recordsManagerReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case 'LOADDATA':\n            const dontChange_l: any = state.filter((x: any) => x.folder !== action.payload.folder);\n            let change_l: any = state.find((x: any) => x.folder === action.payload.folder);\n\n            if (!change_l) {\n                change_l = { folder: action.payload.folder };\n            }\n            change_l.isInProgress = true;\n            change_l.isError = false;\n            change_l.request = action.payload;\n            return [...dontChange_l, { ...change_l }];\n        case 'LOADDATA_SUCCESS':\n            const dontChange_s: any = state.filter((x: any) => x.folder !== action.payload.request.folder);\n            let change_s: any = state.find((x: any) => x.folder === action.payload.request.folder);\n            if (!change_s) {\n                change_s = { folder: action.payload.request.folder };\n            }\n            change_s.isInProgress = false;\n            change_s.isError = false;\n            const result = action.payload.result;\n            if (result && result.data) {\n                const objectKeys = Object.keys(result.data);\n                let mappedRecords = objectKeys.map(k => { return { ...result.data[k], firebaseId: k } });\n                change_s.response = mappedRecords\n            }\n\n            return [...dontChange_s, { ...change_s }];\n        case 'LOADDATA_ERROR':\n            const dontChange_e: any = state.filter((x: any) => x.folder !== action.payload.request.folder);\n            let change_e: any = state.find((x: any) => x.folder === action.payload.request.folder);\n            if (!change_e) {\n                change_e = { folder: action.payload.request.folder };\n            }\n            change_e.isInProgress = false;\n            change_e.isError = true;\n            change_e.response = action.payload;\n            return [...dontChange_e, {change_e}];\n\n        default:\n            return state;\n\n    }\n}\n\nexport default recordsManagerReducer;","\nconst initialState = {\n    request: {}, response: {}, isError: false, isInProgress: false, isLoggedin: false\n}\n\nfunction loginReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case 'LOGIN':\n            return { ...state, request: action.payload, isLoggedIn: false, isInProgress: true, isError: false };\n        case 'LOGIN_SUCCESS':\n            return { ...state, request: state.request, response: action.payload, isLoggedIn: true, isInProgress: false  };\n        case 'LOGIN_ERROR':\n            return { ...state, response: action.payload, isLoggedIn: false, isInProgress: false, isError: true  };\n        default:\n            return state;\n    }\n}\n\nexport default loginReducer;","import { combineReducers } from 'redux';\nimport recordsManagerReducer from \"../features/shared/RecordsManager/redux/recordsManagerReducer\";\nimport loginReducer from '../features/SignIn/redux/reducer';\n\nconst rootReducer = combineReducers({ auth: loginReducer, recordsManager: recordsManagerReducer });\n\nexport default rootReducer;","import axios from 'axios';\n\n\nexport const authService = {\n    login: async function signInService(user: any) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${user.webapiKey}`, { email: user.email, password: user.password, returnSecureToken: true });\n        return fbuser;\n    },\n    register: async function signUpService(user: any) {\n\n        const fbuser = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${user.webapiKey}`, { ...user, returnSecureToken: true });\n        return fbuser;\n    }\n\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { authService } from './signinService';\n\n\nfunction* loginSagaFlow() {\n    yield takeLatest('LOGIN', loginSaga);\n}\n\nfunction* loginSaga(action: any) {\n    try {\n        const result = yield call(authService.login, action.payload);\n        yield put({ type: 'LOGIN_SUCCESS', payload: result });\n\n    } catch (e) {\n        yield put({ type: 'LOGIN_ERROR', message: e.message });\n    }\n\n}\n\nexport default loginSagaFlow;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport firebaseService from './firebaseService';\n\nfunction* recordsmanagerSagaFlow() {\n    yield takeLatest('LOADDATA', recordsManagerSaga);\n\n}\n\nfunction* recordsManagerSaga(action: any) {\n    try {\n        const result = yield call(firebaseService().getRecords, action.payload.user, action.payload.projectId, action.payload.folder);\n        yield put({ type: 'LOADDATA_SUCCESS', payload: {request: action.payload, result} });\n    } catch (e) {\n        yield put({ type: 'LOADDATA_ERROR', payload: {request: action.payload, message: e.message }});\n    }\n}\n\nexport default recordsmanagerSagaFlow;","import { fork } from 'redux-saga/effects';\nimport loginSagaFlow from '../features/SignIn/redux/saga';\nimport recordsmanagerSagaFlow from '../features/shared/RecordsManager/redux/saga';\n\nfunction* sagas() {\n    yield fork(loginSagaFlow);\n    yield fork(recordsmanagerSagaFlow);\n\n}\n\nexport default sagas;","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './App.css';\nimport ImportCustomers from './features/Customers/ImportCustomers';\nimport ProspectCustomers from './features/Customers/ProspectCustomers';\nimport RelatetHeader from './features/HajonsoftHeader/RelateHeader';\nimport Home from './features/Home/Home';\nimport PrivateRoute from './features/SignIn/PrivateRoute';\nimport PublicRoute from './features/SignIn/PublicRoute';\nimport SignIn from './features/SignIn/SignIn';\nimport loginReducer from './redux/reducer';\nimport sagas from './redux/saga';\n\nconst defaultTheme = createMuiTheme();\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst reduxDevtoolsCompose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = (reduxDevtoolsCompose && reduxDevtoolsCompose({ trace: true })) || compose;\nconst store = createStore(\n  loginReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(sagas);\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={defaultTheme}>\n        <Router>\n          <Provider store={store}>\n            <RelatetHeader />\n\n            <div style={{ marginTop: '53px' }}>\n              <PublicRoute restricted exact path=\"/sign-in\" component={SignIn} />\n              <PrivateRoute exact path=\"/confirmed\" component={()=> <ProspectCustomers/>} />\n              <PrivateRoute exact path=\"/prospects\" component={ProspectCustomers} />\n              <PrivateRoute exact path=\"/favorite\" component={ProspectCustomers} />\n              <PrivateRoute exact path=\"/archived\" component={ProspectCustomers} />\n              <PrivateRoute exact path=\"/import\" component={ImportCustomers} />\n              <PrivateRoute exact path=\"/home\" component={Home} />\n            </div>\n          </Provider>\n        </Router>\n      </ThemeProvider>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}